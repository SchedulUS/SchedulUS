<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ca.usherbrooke.gegi.server.persistence.ChangementActiviteMapper">
    <select id="getChangementActivite" resultType="ca.usherbrooke.gegi.server.business.ChangementActivite">
        SELECT cip, activite_id as activiteID, date_changement as dateChangement FROM changement_activite WHERE cip = #{cip};
    </select>

    <select id="VerifierNbChangement" resultType="java.lang.Boolean">
        SELECT * from verifiernbrechange(#{cip});
    </select>

    <select id="DiminuerNbChangement" resultType="java.lang.Integer">
        SELECT * from diminuernbrechange(#{cip});
    </select>

    <select id="getActiviteIntendant" resultType="ca.usherbrooke.gegi.server.business.Groupe">
        SELECT * FROM activite
        INNER JOIN groupe ON groupe.activite_id = activite.activite_id
        WHERE app_id = (SELECT app_id FROM activite WHERE activite_id = #{appID})
        AND type_id = ((SELECT type_id FROM activite WHERE activite_id = #{appID})) AND intendant = true and cip = #{cip}
    </select>

    <select id="getEtudiantIntendant" resultType="ca.usherbrooke.gegi.server.business.Groupe">
        SELECT cip FROM groupe WHERE cip = #{cip} AND intendant = true;
    </select>

    <insert id="setChangementActivite">
        INSERT INTO changement_activite (cip, activite_id,date_changement) VALUES (#{cip}, #{activiteID},NOW()::timestamp);
    </insert>

    <update id="updateChangementActivite">
        UPDATE changement_activite SET date_changement = NOW()::timestamp, activite_id = #{activiteID} WHERE cip = #{cip};
    </update>

    <delete id="deleteChangmentActivite">
        DELETE FROM changement_activite WHERE cip = #{cip}
    </delete>

    <select id="getEtudiantVoulantChanger" resultType="ca.usherbrooke.gegi.server.business.EtudiantEchange">
        SELECT changement_activite.cip, changement_activite.activite_id AS activiteVoulueId
        FROM changement_activite
        INNER JOIN activite AS activite1 ON activite1.activite_id = changement_activite.activite_id
        INNER JOIN groupe AS groupe1 ON groupe1.cip = changement_activite.cip
        WHERE changement_activite.activite_id IN (
            SELECT groupe.activite_id FROM groupe
                                               INNER JOIN activite ON activite.activite_id = groupe.activite_id
            WHERE groupe.cip = #{cip} AND activite.app_id = activite1.app_id
        )
          AND groupe1.activite_id = #{activiteId}
          AND changement_activite.cip != #{cip}
        ORDER BY changement_activite.date_changement ASC
        LIMIT 1;
    </select>
    <delete id="supprimerDemandeChangement">
        DELETE FROM changement_activite WHERE changement_activite.cip = #{cip} AND changement_activite.activite_id = #{activiteId};
    </delete>
    <update id="changerGroupe">
        UPDATE groupe
        SET activite_id=#{newActiviteId}
        WHERE groupe.activite_id=#{oldActiviteId} AND groupe.cip=#{cip};
    </update>
    <select id="getCurrentGroupOfStudent" resultType="java.lang.Integer">
        SELECT groupe.activite_id from groupe
        INNER JOIN activite ON activite.activite_id = groupe.activite_id
        WHERE activite.app_id = (
            SELECT activite.app_id FROM activite
            WHERE activite.activite_id = #{activite_id}
        )
          AND groupe.cip = #{cip};
    </select>
    <select id="getIsContainingGhostStudent" resultType="java.lang.Boolean">
        SELECT
                (SELECT nb_etudiant FROM (SELECT COUNT(groupe.cip) nb_etudiant, a2.activite_id FROM activite
                    JOIN session_app as sa ON sa.app_id = activite.app_id
                    JOIN session as s ON s.session_id = sa.session_id
                    JOIN activite as a2 ON activite.app_id = a2.app_id
                    LEFT JOIN groupe ON groupe.activite_id = a2.activite_id
                    WHERE activite.activite_id = #{activite_id} AND s.periode @> CURRENT_DATE AND a2.type_id = 1
                    GROUP BY a2.activite_id) AS sub2 WHERE activite_id = #{activite_id}) = MAX(nb_etudiant) - 1 a_un_etudiant_fantome
        FROM
            (SELECT COUNT(groupe.cip) nb_etudiant, a2.activite_id FROM activite
               JOIN session_app as sa ON sa.app_id = activite.app_id
               JOIN session as s ON s.session_id = sa.session_id
               JOIN activite as a2 ON activite.app_id = a2.app_id
               LEFT JOIN groupe ON groupe.activite_id = a2.activite_id
             WHERE activite.activite_id = #{activite_id} AND s.periode @> CURRENT_DATE AND a2.type_id = 1
             GROUP BY a2.activite_id)
                AS sub;
    </select>
    <select id="getUsagerIntendant" resultType="java.lang.Boolean">
        SELECT groupe.intendant FROM activite
                                         JOIN activite AS a2 ON activite.app_id = a2.app_id
                                         JOIN groupe ON groupe.activite_id = activite.activite_id
        WHERE a2.activite_id = #{activite_id} AND a2.type_id = 1 AND cip = #{cip};
    </select>
</mapper>
